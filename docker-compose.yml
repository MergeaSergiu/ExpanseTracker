#version: '3.8'
#
#services:
#  rabbitmq:
#    image: rabbitmq:3-management
#    container_name: rabbitmq
#    ports:
#      - "5673:5672"     # AMQP
#      - "15672:15672"   # Management UI
#    environment:
#      RABBITMQ_DEFAULT_USER: guest
#      RABBITMQ_DEFAULT_PASS: guest
#    volumes:
#      - rabbitmq_data:/var/lib/rabbitmq
#
#  maildev:
#    image: maildev/maildev
#    container_name: maildev
#    ports:
#      - "1080:1080"     # Web UI
#      - "1025:1025"     # SMTP server
#
#volumes:
#  rabbitmq_data:

#version: '3.8'
#
#services:
#  prometheus:
#    image: prom/prometheus
#    container_name: prometheus
#    volumes:
#      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
#    ports:
#      - "9090:9090"
#    networks:
#      - monitoring
#
#  grafana:
#    image: grafana/grafana
#    container_name: grafana
#    ports:
#      - "3000:3000"
#    links:
#      - prometheus:prometheus
#    volumes:
#      - ./data/grafana:/var/lib/grafana
#    networks:
#      - monitoring
#    environment:
#      - GF_SECURITY_ADMIN_PASSWORD=admin
#      - GF_USERS_ALLOW_SIGN_UP=false
#      - GF_SERVER_DOMAIN=localhost
#networks:
#  monitoring:

version: '3.8'

services:
  mysql:
    image: mysql:8.4
    container_name: mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: rootpass
      MYSQL_DATABASE: mydb
      MYSQL_USER: myuser
      MYSQL_PASSWORD: mypassword
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - app-network

  redis:
    image: redis
    container_name: redis
    networks:
      - app-network
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: ["redis-server", "--appendonly", "yes"]

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - app-network

  maildev:
    image: maildev/maildev
    container_name: maildev
    ports:
      - "1025:1025"
      - "1080:1080"
    networks:
      - app-network
    depends_on:
      - rabbitmq

  app:
    build: .
    container_name: spring-app
    depends_on:
      - mysql
      - redis
      - rabbitmq
      - maildev
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/mydb
      SPRING_DATASOURCE_USERNAME: myuser
      SPRING_DATASOURCE_PASSWORD: mypassword
      SPRING_REDIS_HOST: redis
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_MAIL_HOST: maildev
      SPRING_MAIL_PORT: 1025
    ports:
      - "8080:8080"
    networks:
      - app-network

#  prometheus:
#    image: prom/prometheus
#    container_name: prometheus
#    volumes:
#      - ./prometheus.yml:/etc/prometheus/prometheus.yml
#    ports:
#      - "9090:9090"
#    networks:
#      - app-network
#
#  grafana:
#    image: grafana/grafana
#    container_name: grafana
#    ports:
#      - "3000:3000"
#    links:
#      - prometheus:prometheus
#    volumes:
#      - ./data/grafana:/var/lib/grafana
#    networks:
#      - app-network
#    depends_on:
#      - prometheus


volumes:
  mysql_data:
  redis_data:

networks:
  app-network:
    driver: bridge
